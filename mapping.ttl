@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix ex: <http://example.org#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .


<#AvatarMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[3].metadata.[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/avatar-{id}";
    rr:class ex:Avatar
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:project_id;
    rr:objectMap [ rml:reference "project_id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:size;
    rr:objectMap [ rml:reference "size" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:user_id;
    rr:objectMap [ rml:reference "user_id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:description;
    rr:objectMap [ rml:reference "description" ]
  ].

<#GeneratedTextMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[2].metadata.[*].generated_text"
  ];
  rr:subjectMap [
    rr:template "http://example.org/generatedtext-{id}";
    rr:class ex:GeneratedText
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:body;
    rr:objectMap [ rml:reference "body" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:created_at;
    rr:objectMap [ 
      rml:reference "created_at";
      rr:datatype xsd:dateTime
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:updated_at;
    rr:objectMap [ 
      rml:reference "updated_at";
      rr:datatype xsd:dateTime
    ]
  ].


<#MetadataMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/metadata-{workspace}";
    rr:class ex:Metadata
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:source;
    rr:objectMap [ rml:reference "source" ]
  ].

<#ScoreMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[2].metadata.[*].score"
  ];
  rr:subjectMap [
    rr:template "http://example.org/score-{id}";
    rr:class ex:Score
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:anger;
    rr:objectMap [ 
      rml:reference "anger";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:negative;
    rr:objectMap [ 
      rml:reference "negative";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:disgust;
    rr:objectMap [ 
      rml:reference "disgust";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:fear;
    rr:objectMap [ 
      rml:reference "fear";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:happiness;
    rr:objectMap [ 
      rml:reference "happiness";
      rr:datatype xsd:decimal
    ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:subjectivity;
    rr:objectMap [ 
      rml:reference "subjectivity";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:positive;
    rr:objectMap [ 
      rml:reference "positive";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:sadness;
    rr:objectMap [ 
      rml:reference "sadness";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:surprise;
    rr:objectMap [ 
      rml:reference "surprise";
      rr:datatype xsd:decimal
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:created_at;
    rr:objectMap [ 
      rml:reference "created_at";
      rr:datatype xsd:dateTime
    ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:updated_at;
    rr:objectMap [ 
      rml:reference "updated_at";
      rr:datatype xsd:dateTime
    ]
  ].
<#ShotMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[0].metadata.[*].shots[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/shot-{video_id}.{foreign_id}";
    rr:class ex:Shot
  ];
  rr:predicateObjectMap [
    rr:predicate ex:video_id;
    rr:objectMap [ rml:reference "video_id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:keyframeTime;
    rr:objectMap [ rml:reference "keyframe_time" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:hasDance;
    rr:objectMap [ rr:template "http://example.org/dance-{dance}" ;
    			rr:class ex:Dance]
  ].

<#SoundMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[2].metadata.[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/sound-{id}";
    rr:class ex:Sound
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:description;
    rr:objectMap [ rml:reference "description" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:user_id;
    rr:objectMap [ rml:reference "user_id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:text_id;
    rr:objectMap [ rml:reference "text_id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:project_id;
    rr:objectMap [ rml:reference "project_id" ]
  ].

<#TextMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[1].metadata.[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/text-{id}";
    rr:class ex:Text
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:belongsToText;
    rr:objectMap [ rr:template "http://example.org/score-{score.id}" ;
    rr:class ex:Score]
  ];
      rr:predicateObjectMap [
    rr:predicate ex:hasGeneratedText;
    rr:objectMap [ rr:template "http://example.org/score-{generated_text.id}";
    rr:class ex:GeneratedText ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:text_id;
    rr:objectMap [ rml:reference "text_id" ]
  ].

<#VideoMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*].metadata.[0].metadata.[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/video-{id}";
    rr:class ex:Video
  ];
  rr:predicateObjectMap [
    rr:predicate ex:id;
    rr:objectMap [ rml:reference "id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:project_id;
    rr:objectMap [ rml:reference "project_id" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:description;
    rr:objectMap [ rml:reference "description" ]
  ];
    rr:predicateObjectMap [
    rr:predicate ex:text_id;
    rr:objectMap [ rml:reference "text_id" ]
  ];
  rr:predicateObjectMap [
    rr:predicate ex:user_id;
    rr:objectMap [ rml:reference "user_id" ]
  ];  
   rr:predicateObjectMap [
    rr:predicate ex:hasShot;
    rr:objectMap [ rr:template "http://example.org/shot-{shots[*].id}" ;
    rr:class ex:Shot]
  ].

<#WorkspaceMapping>
  rml:logicalSource [
    rml:source "/home/estathop/Desktop/chromata/datadumpforsync.json";
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$[*]"
  ];
  rr:subjectMap [
    rr:template "http://example.org/workspace-{workspace}";
    rr:class ex:Workspace
  ];
    rr:predicateObjectMap [
    rr:predicate ex:hasMetadata;
    rr:objectMap [ rr:template "http://example.org/metadata-{workspace}" ;
            rr:class ex:Metadata; ]
  ].

